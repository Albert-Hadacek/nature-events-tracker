{"version":3,"sources":["hooks/useFetch.js","components/Marker.js","components/InfoBox.js","components/Map.js","components/Header.js","components/Footer.js","components/Loader.js","components/Error.js","components/App.js","index.js"],"names":["filterData","data","filters","length","filter","d","includes","categories","id","map","geometry","geometries","coordinates","date","title","lng","lat","time","catId","catTitle","filteredOptions","dynamicOptions","JSON","stringify","label","value","Set","parse","useFetch","useState","setData","options","setOptions","error","setError","loading","setLoading","useEffect","a","fetch","resData","json","events","filteredData","console","log","Marker","onClick","sun","dust","earthquake","water","mountain","human","sea","storm","snow","hot","volcano","waterDrop","fire","exclamation","pickIcon","icon","color","className","style","InfoBox","info","onClose","Date","toDateString","Map","center","zoom","eventsData","infoData","setInfoData","setMarkers","e","bootstrapURLKeys","key","process","defaultCenter","defaultZoom","fullscreenControl","defaultProps","Header","numOfResults","setFilters","selected","setSelected","showAll","useCallback","useLayoutEffect","closeIcon","document","querySelector","addEventListener","src","alt","onChange","labelledBy","disabled","s","Footer","getFullYear","href","Loader","Error","App","ReactDOM","render","getElementById"],"mappings":"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","file":"static/js/main.a522546d.chunk.js","sourcesContent":["import {useState, useEffect} from \"react\"\r\n\r\nconst filterData = (data, filters) => {\r\n\r\n    if(filters.length !== 0) {\r\n        data = data.filter(d => filters.includes(d.categories[0].id))\r\n    }\r\n\r\n\r\n    return data.map(d => {\r\n\r\n        const geometry = d.geometries[d.geometries.length - 1].coordinates;\r\n        const date = d.geometries[d.geometries.length - 1].date\r\n\r\n        return ({\r\n            id: d.id,\r\n            title: d.title,\r\n            lng: typeof geometry[0] === \"number\" ?\r\n                geometry[0]\r\n                :\r\n                geometry[0][0][0],\r\n\r\n            lat: typeof geometry[1] === \"number\" ?\r\n                geometry[1]\r\n                :\r\n                geometry[0][0][1],\r\n            time: date,\r\n            catId: d.categories[0].id,\r\n            catTitle: d.categories[0].title\r\n        })\r\n    })\r\n\r\n\r\n}\r\n\r\nconst filteredOptions = (data) => {\r\n    const dynamicOptions = data.map(d => (\r\n        JSON.stringify({label: d.catTitle, value: d.catId})\r\n    ))\r\n    return [...new Set(dynamicOptions)].map(JSON.parse)\r\n}\r\n\r\nconst useFetch = (filters = []) => {\r\n\r\n    const [data, setData] = useState([]);\r\n    const [options, setOptions] = useState([])\r\n    const [error, setError] = useState(false)\r\n    const [loading, setLoading] = useState(false);\r\n\r\n    useEffect(() => {\r\n\r\n        (async () => {\r\n            setLoading(true)\r\n            try {\r\n                const resData = await fetch(\"https://eonet.sci.gsfc.nasa.gov/api/v2.1/events\")\r\n                const {events} = await resData.json()\r\n                const filteredData = filterData(events, filters)\r\n                setData(filteredData)\r\n                if(filters.length === 0) {\r\n                    const dynamicOptions = filteredOptions(filteredData)\r\n                    setOptions(dynamicOptions)\r\n                }\r\n\r\n\r\n            } catch (e) {\r\n                console.log(e)\r\n                setError(true)\r\n            } finally {\r\n                setLoading(false)\r\n            }\r\n        })()\r\n\r\n    },[filters])\r\n\r\n    return [data, options, error, loading]\r\n\r\n}\r\n\r\nexport default useFetch","import {Icon} from '@iconify/react'\r\nimport fire from \"@iconify/icons-mdi/fire\"\r\nimport exclamation from \"@iconify/icons-mdi/exclamation\"\r\nimport sun from '@iconify/icons-bx/bx-sun';\r\nimport dust from '@iconify/icons-vscode-icons/file-type-dustjs';\r\nimport earthquake from '@iconify/icons-ri/earthquake-line';\r\nimport water from '@iconify/icons-fa-solid/water';\r\nimport mountain from '@iconify/icons-fa-solid/mountain';\r\nimport human from '@iconify/icons-mdi/human-greeting';\r\nimport sea from '@iconify/icons-whh/sea';\r\nimport storm from '@iconify/icons-wi/storm-showers';\r\nimport snow from '@iconify/icons-ion/snow';\r\nimport hot from '@iconify/icons-carbon/temperature-hot';\r\nimport volcano from '@iconify/icons-maki/volcano-11';\r\nimport waterDrop from '@iconify/icons-ion/water-outline';\r\n\r\n\r\n\r\n\r\nconst pickIcon = (catId) => {\r\n    switch (catId) {\r\n        case 6:\r\n            return [sun, \"yellow\"]\r\n        case 7:\r\n            return [dust, \"brown\"]\r\n        case 16:\r\n            return [earthquake , \"grey\"]\r\n        case 9:\r\n            return [water, \"blue\"]\r\n        case 14:\r\n            return [mountain, \"darkgrey\"]\r\n        case 19:\r\n            return [human, \"black\"]\r\n        case 15:\r\n            return [sea, \"darkblue\"]\r\n        case 10:\r\n            return [storm, \"cornflowerblue\"]\r\n        case 17:\r\n            return [snow, \"whitesmoke\"]\r\n        case 18:\r\n            return [hot, \"orange\"]\r\n        case 12:\r\n            return [volcano, \"tomato\"]\r\n        case 13:\r\n            return [waterDrop, \"springgreen\"]\r\n        case 8:\r\n            return [fire, \"red\"]\r\n        default:\r\n            return [exclamation, \"darkred\"]\r\n\r\n\r\n    }\r\n}\r\n\r\n\r\nconst Marker = ({onClick, catId}) => {\r\n    const [icon, color] = pickIcon(catId)\r\n    return (\r\n        <div className=\"marker\" onClick={onClick}>\r\n            <Icon icon={icon} style={{color: color}} className=\"marker-icon\"/>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Marker;","const InfoBox = ({info: {id,title, time, catTitle, lng, lat}, onClose}) => {\r\n    return (\r\n        <div className=\"info-box\">\r\n            <span className=\"info-box-close\" onClick={onClose}>X</span>\r\n            <h2>Event Information</h2>\r\n            <p>ID: <strong>{id}</strong></p>\r\n            <p>Title: <strong>{title}</strong></p>\r\n            <p>Category: <strong>category</strong></p>\r\n            <p>Time: <strong>{new Date(time).toDateString()}</strong></p>\r\n            <p>Coords: <strong>{lat}, {lng}</strong></p>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default InfoBox;","import {useState} from \"react\";\r\nimport GoogleMapReact from 'google-map-react'\r\nimport Marker from \"./Marker\";\r\nimport InfoBox from \"./InfoBox\";\r\n\r\nconst Map = ({center, zoom, eventsData}) => {\r\n\r\n    const [infoData, setInfoData] = useState(null)\r\n\r\n    const setMarkers = eventsData\r\n        .map(e => (\r\n            <Marker\r\n                key={e.id}\r\n                lat={e.lat}\r\n                lng={e.lng}\r\n                catId={e.catId}\r\n                onClick={() => setInfoData(e)}\r\n            />\r\n            )\r\n        )\r\n\r\n    return (\r\n        <main className=\"main\">\r\n            <GoogleMapReact\r\n                bootstrapURLKeys={{key: process.env.REACT_APP_GOOGLE_API}}\r\n                defaultCenter={center}\r\n                defaultZoom={zoom}\r\n                options={{\r\n                    fullscreenControl: false\r\n                }}\r\n            >\r\n                {setMarkers}\r\n            </GoogleMapReact>\r\n            {infoData && <InfoBox info={infoData} onClose={() => setInfoData(null)}/>}\r\n        </main>\r\n    )\r\n}\r\n\r\nMap.defaultProps = {\r\n    center: {\r\n        lat: 49.8175,\r\n        lng: 15.4730\r\n    },\r\n    zoom: 5\r\n}\r\nexport default Map","import {useState, useLayoutEffect, useCallback} from \"react\"\r\nimport MultiSelect from \"react-multi-select-component\"\r\n\r\nconst Header = ({numOfResults, setFilters, options}) => {\r\n\r\n    const [selected, setSelected] = useState([]);\r\n\r\n    const showAll = useCallback(() => {\r\n        setFilters([])\r\n    }, [])\r\n\r\n    const filterOptions = () => {\r\n        setFilters(selected.map(s => s.value))\r\n    }\r\n\r\n    useLayoutEffect(() =>{\r\n        const closeIcon = document.querySelector(\".dropdown-search-clear-icon\")\r\n        if(closeIcon) {\r\n        closeIcon.addEventListener(\"click\", showAll)\r\n        }\r\n        \r\n    }, [selected, showAll,setFilters])\r\n\r\n\r\n\r\n    return (\r\n        <header className=\"header\">\r\n            <div className= \"header-logo\">\r\n                <img src={`${process.env.PUBLIC_URL}media/logo.svg`} alt=\"Logo\"/>\r\n            </div>\r\n            <MultiSelect\r\n                className={\"header-select\"}\r\n                options={options}\r\n                value={selected}\r\n                onChange={setSelected}\r\n                labelledBy={\"Select Filters\"}\r\n            />\r\n            <div className={\"header-buttons\"}>\r\n                <button className=\"header-button\" disabled={selected.length === 0} onClick={filterOptions}>Filter</button>\r\n                <button className=\"header-button\" onClick={showAll}>Show All</button>\r\n            </div>\r\n\r\n            <div className={\"header-text\"}>Number of results: {numOfResults}</div>\r\n        </header>\r\n    );\r\n};\r\n\r\nHeader.defaultProps ={\r\n    options: []\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nconst Footer = () => (\r\n    <footer className=\"footer\">\r\n        Copyright &copy; Albert Hadacek {new Date().getFullYear()} (<a href=\"https://hadacek.tech\">www.hadacek.tech</a>)\r\n    </footer>\r\n)\r\n\r\nexport default Footer;","const Loader = () => {\r\n    return (\r\n        <main className=\"main main-custom-page\">\r\n            <div className=\"loader-icon\"/>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Loader;","const Error= () => {\r\n    return (\r\n        <main className=\"main main-custom-page\">\r\n            <p>Something went wrong...</p>\r\n        </main>\r\n    );\r\n};\r\n\r\nexport default Error;","import {useState} from 'react'\n\nimport useFetch from \"../hooks/useFetch\";\nimport Map from \"./Map\";\nimport Header from \"./Header\";\nimport Footer from \"./Footer\";\nimport Loader from \"./Loader\";\nimport Error from \"./Error\";\n\n\nconst App = () => {\n\n    const [filters, setFilters] = useState([])\n    const [data, options, error, loading] = useFetch(filters);\n\n\n  return (\n    <>\n        <Header setFilters={setFilters} numOfResults={data.length} options={options}/>\n        {error ?\n            <Error/>\n            :\n            <>\n                {loading ?\n                    <Loader/>\n                    :\n                    <Map eventsData={data}/>\n                }\n            </>\n\n        }\n        <Footer/>\n\n    </>\n  );\n}\n\nexport default App;\n","import ReactDOM from 'react-dom'\nimport React from \"react\"\nimport 'typeface-lato'\nimport './styles/styles.css'\nimport App from './components/App'\n\nReactDOM.render(\n <App/>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}